declare module "typescript/eslint" {
    export type RawRuleName =
        | "adjacent-overload-signatures"
        | "array-type"
        | "await-thenable"
        | "ban-ts-comment"
        | "ban-tslint-comment"
        | "ban-types"
        | "brace-style"
        | "camelcase"
        | "class-literal-property-style"
        | "comma-dangle"
        | "comma-spacing"
        | "consistent-generic-constructors"
        | "consistent-indexed-object-style"
        | "consistent-type-assertions"
        | "consistent-type-definitions"
        | "consistent-type-exports"
        | "consistent-type-imports"
        | "default-param-last"
        | "dot-notation"
        | "explicit-function-return-type"
        | "explicit-member-accessibility"
        | "explicit-module-boundary-types"
        | "func-call-spacing"
        | "indent"
        | "init-declarations"
        | "keyword-spacing"
        | "lines-between-class-members"
        | "member-delimiter-style"
        | "member-ordering"
        | "method-signature-style"
        | "naming-convention"
        | "no-array-constructor"
        | "no-base-to-string"
        | "no-confusing-non-null-assertion"
        | "no-confusing-void-expression"
        | "no-dupe-class-members"
        | "no-duplicate-enum-values"
        | "no-duplicate-imports"
        | "no-dynamic-delete"
        | "no-empty-function"
        | "no-empty-interface"
        | "no-explicit-any"
        | "no-extra-non-null-assertion"
        | "no-extra-parens"
        | "no-extra-semi"
        | "no-extraneous-class"
        | "no-floating-promises"
        | "no-for-in-array"
        | "no-implicit-any-catch"
        | "no-implied-eval"
        | "no-inferrable-types"
        | "no-invalid-this"
        | "no-invalid-void-type"
        | "no-loop-func"
        | "no-loss-of-precision"
        | "no-magic-numbers"
        | "no-meaningless-void-operator"
        | "no-misused-new"
        | "no-misused-promises"
        | "no-namespace"
        | "no-non-null-asserted-nullish-coalescing"
        | "no-non-null-asserted-optional-chain"
        | "no-non-null-assertion"
        | "no-parameter-properties"
        | "no-redeclare"
        | "no-redundant-type-constituents"
        | "no-require-imports"
        | "no-restricted-imports"
        | "no-shadow"
        | "no-this-alias"
        | "no-throw-literal"
        | "no-type-alias"
        | "no-unnecessary-boolean-literal-compare"
        | "no-unnecessary-condition"
        | "no-unnecessary-qualifier"
        | "no-unnecessary-type-arguments"
        | "no-unnecessary-type-assertion"
        | "no-unnecessary-type-constraint"
        | "no-unsafe-argument"
        | "no-unsafe-assignment"
        | "no-unsafe-call"
        | "no-unsafe-member-access"
        | "no-unsafe-return"
        | "no-unused-expressions"
        | "no-unused-vars"
        | "no-use-before-define"
        | "no-useless-constructor"
        | "no-useless-empty-export"
        | "no-var-requires"
        | "non-nullable-type-assertion-style"
        | "object-curly-spacing"
        | "padding-line-between-statements"
        | "parameter-properties"
        | "prefer-as-const"
        | "prefer-enum-initializers"
        | "prefer-for-of"
        | "prefer-function-type"
        | "prefer-includes"
        | "prefer-literal-enum-member"
        | "prefer-namespace-keyword"
        | "prefer-nullish-coalescing"
        | "prefer-optional-chain"
        | "prefer-readonly-parameter-types"
        | "prefer-readonly"
        | "prefer-reduce-type-parameter"
        | "prefer-regexp-exec"
        | "prefer-return-this-type"
        | "prefer-string-starts-ends-with"
        | "prefer-ts-expect-error"
        | "promise-function-async"
        | "quotes"
        | "require-array-sort-compare"
        | "require-await"
        | "restrict-plus-operands"
        | "restrict-template-expressions"
        | "return-await"
        | "semi"
        | "sort-type-union-intersection-members"
        | "space-before-blocks"
        | "space-before-function-paren"
        | "space-infix-ops"
        | "strict-boolean-expressions"
        | "switch-exhaustiveness-check"
        | "triple-slash-reference"
        | "type-annotation-spacing"
        | "typedef"
        | "unbound-method"
        | "unified-signatures"

    export type RuleName = `@typescript-eslint/${RawRuleName}`
}
